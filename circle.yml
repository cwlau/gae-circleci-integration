# Copyright 2015, Google, Inc.
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use
# this file except in compliance with the License. You may obtain a copy of the
# License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable
# law or agreed to in writing, software distributed under the License is distributed
# on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied. See the License for the specific language governing permissions and
# limitations under the License.

machine:
  environment:
    # Add app engine sdk to pythonpath for local unit tests.
    PYTHONPATH: ${PYTHONPATH}:${HOME}/google_appengine

    CLOUDSDK_PYTHON_SITEPACKAGES: 1
    CLOUDSDK_CORE_DISABLE_PROMPTS: 1

    CLOUDSDK_INSTALL_DIR: /tmp

dependencies:
  cache_directories:
    - ~/google-cloud-sdk
  pre:
    - echo $CLIENT_SECRET | base64 --decode > ${HOME}/client-secret.json
    - if [ ! -d ~/google-cloud-sdk ]; then curl https://sdk.cloud.google.com | bash
    - ~/google-cloud-sdk/bin/gcloud --quiet components update
    - ~/google-cloud-sdk/bin/gcloud auth activate-service-account --key-file  ${HOME}/client-secret.json
    - ~/google-cloud-sdk/bin/gcloud config set project ${GCLOUD_PROJECT}

    # dependencies:
    #   pre:
    #     # Download App Engine SDK
    #     # This is not necessary to deploy, its only necessary  to run local tests importing the App Engine SDK
    #     - curl -o $HOME/google_appengine_1.9.40.zip https://storage.googleapis.com/appengine-sdks/featured/google_appengine_1.9.40.zip
    #     - unzip -q -d $HOME $HOME/google_appengine_1.9.40.zip
    #     # Retrieve our secrets from the CircleCI environment
    #     - echo $CLIENT_SECRET | base64 --decode > ${HOME}/client-secret.json
    #     # vendor our dependencies
    #     # - mkdir -p lib
    #     # - pip install -r requirements.txt -t lib

    - pip install --upgrade pip setuptools webapp2 jinja2 webob
    # Make sure gcloud is up to date
    # - gcloud --quiet components update app
    # # authenticate gcloud
    # - gcloud auth activate-service-account --key-file ${HOME}/client-secret.json
    # # Replace <your-project-id>
    # - gcloud config set project ${GCLOUD_PROJECT}"

    # For some reasons, there is an issue with the pre-installed gcloud that
    # PyOpenSSL is not available when trying to activate the service account.
    # Re-installing the gcloud worked as a workaround.
    # See https://discuss.circleci.com/t/deployment-to-appengine-fails-pyopenssl-not-available/2154
    # - sudo apt-get remove python-virtualenv python-openssl python3-openssl
    # - sudo apt-get update
    # - sudo apt-get install python-openssl python3-openssl
    # - sudo rm -rf /opt/google-cloud-sdk/
    # - sudo chown -R $(whoami) /usr/local/bin
    # - curl https://sdk.cloud.google.com | bash
    # - source ~/.bashrc

    # post:
    #     # - echo ${GCLOUD_SERVICE_KEY} | base64 --decode > ${HOME}/client-secret.json
    #     - /tmp/google-cloud-sdk/bin/gcloud config set project ${GCLOUD_PROJECT}
    #     - /tmp/google-cloud-sdk/bin/gcloud --quiet components update
    #     - /tmp/google-cloud-sdk/bin/gcloud --quiet components install beta
    #     - /tmp/google-cloud-sdk/bin/gcloud auth activate-service-account ${GCLOUD_SERVICE_ACCOUNT} --key-file ${HOME}/client-secret.json

test:
  override:
    # run local unit tests
    - python test_main.py

deployment:
    staging:
        branch: master
        commands:
        # deploy to AppEngine
        - gcloud -q preview app deploy app.yaml --promote --version=1
        # Run Test
        - python run_test.py
